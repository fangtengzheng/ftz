<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.a.mapper.UserMapper">

    <resultMap id="UserResultMap" type="com.example.a.entity.User">
        <id property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="realName" column="real_name"/>
        <result property="gender" column="gender"/>
        <result property="age" column="age"/>
        <result property="question" column="question"/>
        <result property="answer" column="answer"/>
        <result property="avatar" column="avatar"/> <!-- 新增头像映射 -->
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="status" column="status"/>
        <result property="isAdmin" column="is_admin"/>
    </resultMap>

    <insert id="insertUser" parameterType="com.example.a.entity.User">
        INSERT INTO user(
            username, password, phone, email, real_name,
            gender, age, question, answer, avatar, create_time,
            update_time, status, is_admin
        ) VALUES (
                     #{username}, #{password}, #{phone}, #{email}, #{realName},
                     #{gender}, #{age}, #{question}, #{answer}, #{avatar}, NOW(),
                     NOW(), #{status}, #{isAdmin}
                 )
    </insert>

    <select id="selectUserByUsername" parameterType="String" resultMap="UserResultMap">
        SELECT * FROM user WHERE username = #{username}
    </select>
    <update id="updatePassword">
        UPDATE user
        SET password = #{newPassword}, update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <select id="selectUserByPhone" parameterType="String" resultMap="UserResultMap">
        SELECT * FROM user WHERE phone = #{phone}
    </select>

    <select id="selectUserByEmail" parameterType="String" resultMap="UserResultMap">
        SELECT * FROM user WHERE email = #{email}
    </select>

    <select id="selectUserById" parameterType="Long" resultMap="UserResultMap">
        SELECT * FROM user WHERE user_id = #{userId}
    </select>

    <update id="updateUser" parameterType="com.example.a.entity.User">
        UPDATE user
        SET
            username = #{username},
            email = #{email},
            real_name = #{realName},
            gender = #{gender},
            age = #{age},
            phone = #{phone},
            update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <update id="updateUserAvatar">
        UPDATE user
        SET avatar = #{avatar}, update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <update id="updateUserStatus">
        UPDATE user
        SET status = #{status}, update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <update id="deleteUser">
        UPDATE user
        SET status = 0, update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <select id="selectAllUsers" resultMap="UserResultMap">
        SELECT * FROM user ORDER BY create_time DESC
    </select>

</mapper>